C251 COMPILER V5.60.0,  STC32G_I2C                                                         01/12/24  22:45:25  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_I2C
OBJECT MODULE PLACED IN .\Objects\STC32G_I2C.obj
COMPILER INVOKED BY: D:\keil c51&stm32&c251\Keil_v5\C251\BIN\C251.EXE STC32G_I2C.c XSMALL INTR2 BROWSE DEBUG PRINT(.\Lis
                    -tings\STC32G_I2C.lst) OBJECT(.\Objects\STC32G_I2C.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCAI.com ---------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   10          /* --- QQ:  800003751 -------------------------------------------------*/
   11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   12          /*---------------------------------------------------------------------*/
   13          
   14          #include        "STC32G_I2C.h"
   15          
   16          u8 I2C_BUF_type I2C_Buffer[I2C_BUF_LENTH];
   17          
   18          #define SLAW    0xA2
   19          #define SLAR    0xA3
   20          
   21          //========================================================================
   22          // 函数: void I2C_Init(I2C_InitTypeDef *I2Cx)
   23          // 描述: I2C初始化程序.
   24          // 参数: I2Cx: 结构参数,请参考I2C.h里的定义.
   25          // 返回: none.
   26          // 版本: V1.0, 2012-11-22
   27          //========================================================================
   28          void I2C_Init(I2C_InitTypeDef *I2Cx)
   29          {
   30   1              if(I2Cx->I2C_Mode == I2C_Mode_Master)
   31   1              {
   32   2                      I2C_Master();                   //设为主机      
   33   2                      I2CMSST = 0x00;         //清除I2C主机状态寄存器
   34   2                      I2C_SetSpeed(I2Cx->I2C_Speed);
   35   2                      if(I2Cx->I2C_MS_WDTA == ENABLE)         I2C_WDTA_EN();  //使能自动发送
   36   2                      else                                                                    I2C_WDTA_DIS(); //禁止自动发送
   37   2              }
   38   1              else
   39   1              {
   40   2                      I2C_Slave();    //设为从机
   41   2                      I2CSLST = 0x00;         //清除I2C从机状态寄存器
   42   2                      I2C_Address(I2Cx->I2C_SL_ADR);
   43   2                      if(I2Cx->I2C_SL_MA == ENABLE)           I2C_MATCH_EN(); //从机地址比较功能，只接受相匹配地址
   44   2                      else                                                                    I2C_MATCH_DIS();        //禁止从机地址比较功能，接受所有设备地址
   45   2              }
   46   1              
   47   1              I2C_Function(I2Cx->I2C_Enable);
   48   1      }
   49          
   50          void IIC_Init()                         //IIC初始化
   51          {
   52   1          I2C_S1 =2;              //I2C功能脚选择，00:P1.5,P1.4; 01:P2.5,P2.4; 11:P3.2,P3.3
   53   1          I2C_S0 =1;
   54   1          I2CCFG = 0XE0;                      //设置速度和使能IIC
   55   1          I2CMSST = 0;                        //清空主机状态
   56   1      }
   57          
   58          //========================================================================
C251 COMPILER V5.60.0,  STC32G_I2C                                                         01/12/24  22:45:25  PAGE 2   

   59          // 函数: u8     Get_MSBusy_Status (void)
   60          // 描述: 获取主机忙碌状态.
   61          // 参数: none.
   62          // 返回: 主机忙碌状态.
   63          // 版本: V1.0, 2012-11-22
   64          //========================================================================
   65          u8 Get_MSBusy_Status(void)
   66          {
   67   1              return (I2CMSST & 0x80);
   68   1      }
   69          
   70          //========================================================================
   71          // 函数: void   Wait (void)
   72          // 描述: 等待主机模式I2C控制器执行完成I2CMSCR.
   73          // 参数: none.
   74          // 返回: none.
   75          // 版本: V1.0, 2012-11-22
   76          //========================================================================
   77          void Wait()
   78          {
   79   1              while (!(I2CMSST & 0x40));
   80   1              I2CMSST &= ~0x40;
   81   1      }
   82          
   83          //========================================================================
   84          // 函数: void Start (void)
   85          // 描述: I2C总线起始函数.
   86          // 参数: none.
   87          // 返回: none.
   88          // 版本: V1.0, 2020-09-15
   89          //========================================================================
   90          void Start()
   91          {
   92   1              I2CMSCR = 0x01;                         //发送START命令
   93   1              Wait();
   94   1      }
   95          
   96          //========================================================================
   97          // 函数: void SendData (char dat)
   98          // 描述: I2C发送一个字节数据函数.
   99          // 参数: 发送的数据.
  100          // 返回: none.
  101          // 版本: V1.0, 2020-09-15
  102          //========================================================================
  103          void SendData(char dat)
  104          {
  105   1              I2CTXD = dat;                           //写数据到数据缓冲区
  106   1              I2CMSCR = 0x02;                         //发送SEND命令
  107   1              Wait();
  108   1      }
  109          
  110          //========================================================================
  111          // 函数: void RecvACK (void)
  112          // 描述: I2C获取ACK函数.
  113          // 参数: none.
  114          // 返回: none.
  115          // 版本: V1.0, 2020-09-15
  116          //========================================================================
  117          void RecvACK()
  118          {
  119   1              I2CMSCR = 0x03;                         //发送读ACK命令
  120   1              Wait();
  121   1      }
  122          
  123          //========================================================================
  124          // 函数: char RecvData (void)
C251 COMPILER V5.60.0,  STC32G_I2C                                                         01/12/24  22:45:25  PAGE 3   

  125          // 描述: I2C读取一个字节数据函数.
  126          // 参数: none.
  127          // 返回: 读取数据.
  128          // 版本: V1.0, 2020-09-15
  129          //========================================================================
  130          char RecvData()
  131          {
  132   1              I2CMSCR = 0x04;                         //发送RECV命令
  133   1              Wait();
  134   1              return I2CRXD;
  135   1      }
  136          
  137          //========================================================================
  138          // 函数: void SendACK (void)
  139          // 描述: I2C发送ACK函数.
  140          // 参数: none.
  141          // 返回: none.
  142          // 版本: V1.0, 2020-09-15
  143          //========================================================================
  144          void SendACK()
  145          {
  146   1              I2CMSST = 0x00;                         //设置ACK信号
  147   1              I2CMSCR = 0x05;                         //发送ACK命令
  148   1              Wait();
  149   1      }
  150          
  151          //========================================================================
  152          // 函数: void SendNAK (void)
  153          // 描述: I2C发送NAK函数.
  154          // 参数: none.
  155          // 返回: none.
  156          // 版本: V1.0, 2020-09-15
  157          //========================================================================
  158          void SendNAK()
  159          {
  160   1              I2CMSST = 0x01;                         //设置NAK信号
  161   1              I2CMSCR = 0x05;                         //发送ACK命令
  162   1              Wait();
  163   1      }
  164          
  165          //========================================================================
  166          // 函数: void Stop (void)
  167          // 描述: I2C总线停止函数.
  168          // 参数: none.
  169          // 返回: none.
  170          // 版本: V1.0, 2020-09-15
  171          //========================================================================
  172          void Stop()
  173          {
  174   1              I2CMSCR = 0x06;                         //发送STOP命令
  175   1              Wait();
  176   1      }
  177          
  178          //========================================================================
  179          // 函数: void SendCmdData (u8 cmd, u8 dat)
  180          // 描述: I2C发送一个字节数据函数.
  181          // 参数: 命令/数据.
  182          // 返回: none.
  183          // 版本: V1.0, 2020-09-15
  184          //========================================================================
  185          void SendCmdData(u8 cmd, u8 dat)
  186          {
  187   1              I2CTXD = dat;                           //写数据到数据缓冲区
  188   1              I2CMSCR = cmd;                          //设置命令
  189   1              Wait();
  190   1      }
C251 COMPILER V5.60.0,  STC32G_I2C                                                         01/12/24  22:45:25  PAGE 4   

  191          
  192          //========================================================================
  193          // 函数: void I2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
  194          // 描述: I2C写入数据函数.
  195          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p写入数据存储位置, number写入数据个数.
  196          // 返回: none.
  197          // 版本: V1.0, 2020-09-15
  198          //========================================================================
  199          void I2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)  /*  DeviceAddress,WordAddress,First Data
             - Address,Byte lenth   */
  200          {
  201   1              Start();                                //发送起始命令
  202   1              SendData(dev_addr);                     //发送设备地址+写命令
  203   1              RecvACK();
  204   1              SendData(mem_addr);                     //发送存储地址
  205   1              RecvACK();
  206   1              do
  207   1              {
  208   2                      SendData(*p++);
  209   2                      RecvACK();
  210   2              }
  211   1              while(--number);
  212   1              Stop();                                 //发送停止命令
  213   1      }
  214          
  215          //========================================================================
  216          // 函数: void I2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
  217          // 描述: I2C读取数据函数.
  218          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p读取数据存储位置, number读取数据个数.
  219          // 返回: none.
  220          // 版本: V1.0, 2020-09-15
  221          //========================================================================
  222          void I2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)   /*  DeviceAddress,WordAddress,First Data
             - Address,Byte lenth   */
  223          {
  224   1              Start();                                //发送起始命令
  225   1              SendData(dev_addr);                     //发送设备地址+写命令
  226   1              RecvACK();
  227   1              SendData(mem_addr);                     //发送存储地址
  228   1              RecvACK();
  229   1              Start();                                //发送起始命令
  230   1              SendData(dev_addr|1);                   //发送设备地址+读命令
  231   1              RecvACK();
  232   1              do
  233   1              {
  234   2                      *p = RecvData();
  235   2                      p++;
  236   2                      if(number != 1) SendACK();          //send ACK
  237   2              }
  238   1              while(--number);
  239   1              SendNAK();                              //send no ACK   
  240   1              Stop();                                 //发送停止命令
  241   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       583     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         8          6
  bit size             =    ------     ------
  ebit size            =    ------     ------
C251 COMPILER V5.60.0,  STC32G_I2C                                                         01/12/24  22:45:25  PAGE 5   

  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
