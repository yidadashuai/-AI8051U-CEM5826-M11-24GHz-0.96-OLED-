C251 COMPILER V5.60.0,  STC32G_SPI                                                         14/11/24  23:06:34  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_SPI
OBJECT MODULE PLACED IN .\Objects\STC32G_SPI.obj
COMPILER INVOKED BY: D:\keil c51&stm32&c251\Keil_v5\C251\BIN\C251.EXE ..\STC32G-SOFTWARE-LIB\library\STC32G_SPI.c XSMALL
                    - INTR2 BROWSE DEBUG PRINT(.\Listings\STC32G_SPI.lst) TABS(2) OBJECT(.\Objects\STC32G_SPI.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCAI.com ---------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   10          /* --- QQ:  800003751 -------------------------------------------------*/
   11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   12          /*---------------------------------------------------------------------*/
   13          
   14          #include  "STC32G_SPI.h"
   15          
   16          u8  SPI_RxTimerOut;
   17          u8  SPI_BUF_type SPI_RxBuffer[SPI_BUF_LENTH];
   18          bit B_SPI_Busy; //发送忙标志
   19          
   20          
   21          //========================================================================
   22          // 函数: void SPI_Init(SPI_InitTypeDef *SPIx)
   23          // 描述: SPI初始化程序.
   24          // 参数: SPIx: 结构参数,请参考spi.h里的定义.
   25          // 返回: none.
   26          // 版本: V1.0, 2012-11-22
   27          //========================================================================
   28          void  SPI_Init(SPI_InitTypeDef *SPIx)
   29          {
   30   1        if(SPIx->SPI_SSIG == ENABLE)      SSIG = 1;   //conform Master or Slave by SPI_Mode(ignore SS)
   31   1        else                  SSIG = 0;   //conform Master or Slave by SS pin.
   32   1        SPI_Start(SPIx->SPI_Enable);
   33   1        SPI_FirstBit_Set(SPIx->SPI_FirstBit);
   34   1        SPI_Mode_Set(SPIx->SPI_Mode);
   35   1        SPI_CPOL_Set(SPIx->SPI_CPOL);
   36   1        SPI_CPHA_Set(SPIx->SPI_CPHA);
   37   1        SPI_Clock_Select(SPIx->SPI_Speed);
   38   1        
   39   1        SPI_RxTimerOut = 0;
   40   1        B_SPI_Busy = 0;
   41   1      }
   42          
   43          //========================================================================
   44          // 函数: void SPI_SetMode(u8 mode)
   45          // 描述: SPI设置主从模式函数.
   46          // 参数: mode: 指定模式, 取值 SPI_Mode_Master 或 SPI_Mode_Slave.
   47          // 返回: none.
   48          // 版本: V1.0, 2012-11-22
   49          //========================================================================
   50          void SPI_SetMode(u8 mode)
   51          {
   52   1        if(mode == SPI_Mode_Slave)
   53   1        {
   54   2          MSTR = 0;   //重新设置为从机待机
   55   2          SSIG = 0;   //SS引脚确定主从
   56   2        }
   57   1        else
   58   1        {
C251 COMPILER V5.60.0,  STC32G_SPI                                                         14/11/24  23:06:34  PAGE 2   

   59   2          MSTR = 1;   //使能 SPI 主机模式
   60   2          SSIG = 1;   //忽略SS引脚功能
   61   2        }
   62   1      }
   63          
   64          //========================================================================
   65          // 函数: void SPI_WriteByte(u8 dat)
   66          // 描述: SPI发送一个字节数据.
   67          // 参数: dat: 要发送的数据.
   68          // 返回: none.
   69          // 版本: V1.0, 2020-09-14
   70          //========================================================================
   71          void SPI_WriteByte(u8 dat)    //SPI发送一个字节数据
   72          {
   73   1        if(ESPI)
   74   1        {
   75   2          B_SPI_Busy = 1;
   76   2          SPDAT = dat;
   77   2          while(B_SPI_Busy);  //中断模式
   78   2        }
   79   1        else
   80   1        {
   81   2          SPDAT = dat;
   82   2          while(SPIF == 0); //查询模式
   83   2          SPI_ClearFlag();   //清除SPIF和WCOL标志
   84   2        }
   85   1      }
   86          
   87          //========================================================================
   88          // 函数: void SPI_ReadByte(u8 dat)
   89          // 描述: SPI查询模式读取一个字节数据.
   90          // 参数: none.
   91          // 返回: 读取的数据.
   92          // 版本: V1.0, 2020-09-14
   93          //========================================================================
   94          u8 SPI_ReadByte(void)
   95          {
   96   1        SPDAT = 0xff;
   97   1        while(SPIF == 0) ;
   98   1        SPI_ClearFlag();   //清0 SPIF和WCOL标志
   99   1        return (SPDAT);
  100   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       155     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       129     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
